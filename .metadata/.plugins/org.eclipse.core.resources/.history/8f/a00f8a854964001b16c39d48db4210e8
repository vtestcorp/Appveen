package com.PageModules;

import java.util.List;

import org.json.JSONObject;
import org.openqa.selenium.WebElement;

import com.PageObjects.ObjectAddAttribute;

public class AddAttribute extends ObjectAddAttribute{
	
	public AddAttribute() {
		super();
	}
	public int numberOfCurrentDataService() {
		List<WebElement> elements = getWebElements(editButton);
		int numberOfDataService = elements.size();
		System.out.println("Number of Data Service Currently avaialble is :" + numberOfDataService);
		return numberOfDataService;
	}

	public int numberOfPreviousAttributes() {
		List<WebElement> elements = getWebElements(allPreviousAttributes);
		int numberOfPreviouAttributes = elements.size();
		System.out.println("Number of previous Attributes are : " + numberOfPreviouAttributes);
		return numberOfPreviouAttributes;
	}

	public void namesOfPreviousAttributes() {
		List<WebElement> elements = getWebElements(allPreviousAttributes);
		int numberOfPreviouAttributes = elements.size();
		for (int i = 0; i < numberOfPreviouAttributes; i++) {
			String name = elements.get(i).getText();
			System.out.println(name);
		}
	}
	public void nameRecentlyAddedAttribute(String nameOfAttribute) {
		int currentNumberOfAttributes=numberOfPreviousAttributes();
		System.out.println(currentNumberOfAttributes);
		List<WebElement> elements = getWebElements(allPreviousAttributes);
		int size=elements.size();
		clickElementJS(elements.get(size-1));
		elements.get(size-1).sendKeys("nameOfAttribute");
	}

	public void editExistingAttribute() {

	}
	public JSONObject getNewAttributeData() {
		JSONObject object=new JSONObject();
		object.put("Custom Label", "Employee Number");
		object.put("Error Message", "Should be a number");
		object.put("Default Value", "1");
		object.put("Minimum Value", "1");
		object.put("Maximum Value", "1000");
		object.put("Description Text", "Describes Employee Number");
		return object;
	}
	/*
	 	Step 0: Login
		Step 1: Click on Edit
		Step 2: Click on editDraft
		Step 3: Click on New Attribute
		Step 4: Click on Attribute Name Field
		Step 5: Send Text and Name the Attribute
		Step 6: Select the options Create, Required and Unique
		Step 7: Select dropdown for type (11 options)
		Step 8: After Selecting dropdown arrow select text type and then again select
		text by usign mouse hover
		Based on the options in 7 the next values will be there
		for number option in step 7 we will continue the flow
		Send Text in Customer label
		Send TExt in Custom Error
		Send Text in Defaut Value
		Let the Drag and drop be default value
		Send TExt in Min and Max value
		Send Text in Description
		Save/Deploy 
	 */
	public void addNewAttribute() {
		clickElement(editButton);
		clickElement(editDraft);
		int numberofPreviousAttributes=numberOfPreviousAttributes();
		clickElement(newAttribute);
		int numberOfCurrentAttributes=numberOfPreviousAttributes();
		applyWait(3000);
		if (numberofPreviousAttributes<numberOfCurrentAttributes) {
			nameRecentlyAddedAttribute("Employee Number");
		}
		if (!isElementSelected(requiredOnlyRadioButton)) {
		clickElementJS(requiredOnlyRadioButton);
		}
		clickElement(dropdownArrow);
		clickElement(dropdownTypeText);
		mouseHover(selectDropdownTextText);
		clickElementJS(selectDropdownTextText);
		JSONObject object=getNewAttributeData();
		System.out.println("The values to be entered are as follow : "+object.toString());
		scrollToElement(customLableTextBox);
		enterText(customLableTextBox, object.getString("Custom Label"));
		scrollToElement(errorMessageTextbox);
		enterText(errorMessageTextbox, object.getString("Error Message"));
		scrollToElement(deafultValueTextbox);
		enterText(deafultValueTextbox, object.getString("Default Value"));
		scrollToElement(minNumberTextbox);
		enterText(minNumberTextbox, object.getString("Minimum Value"));
		scrollToElement(maxNumberTextbox);
		enterText(maxNumberTextbox, object.getString("Maximum Value"));
		scrollToElement(descriptionTextarea);
		enterText(descriptionTextarea, object.getString("Description Text"));
		clickElement(saveButtonAttribute);
	}

}
