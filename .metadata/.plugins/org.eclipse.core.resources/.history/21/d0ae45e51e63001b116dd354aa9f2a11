package com.PageObjects;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

public class ObjectAddAttribute extends ObjectLoginAuthor{
	
	public ObjectAddAttribute() {
		super();
	}
	
	public By addNewDataService=By.xpath("//span[contains(text(),'New Data Service')]");
	public By editButton=By.xpath("//span[contains(text(),'Edit')]");
	public By editDraft=By.xpath("//button[text()='Edit draft']");
	
	public By allPreviousAttributes=By.xpath("//input[@triggers='manual']");
	
	public By requiredOnlyRadioButton=By.xpath("//div[contains(text(),'Required')]");
	public By createRadioButton=By.xpath("//div[text()='Create Only']");
	public By uniqueRadioButton=By.xpath("//div[contains(text(),'Unique')]");
	
	
	public By dropdownArrow = By.xpath("//span[@class='fas fa-angle-down text-accent ng-star-inserted']");
	public By dropdownTypeText=By.xpath("//span[@class='odp-abc']");
	public By dropdownTypeNumber=By.xpath("//span[@class='odp-123']");
	public By dropdownTypeBoolean=By.xpath("//span[@class='odp-boolean']");
	public By dropdownTypeDate=By.xpath("//span[@class='odp-calendar']");
	public By dropdownTypeGroup=By.xpath("//span[@class='odp-group']");
	public By dropdownTypeUser=By.xpath("//body//odp-root//button[5]");
	public By dropdownTypeCollection=By.xpath("//span[@class='odp-array']");
	public By dropdownTypeLocation=By.xpath("//span[@class='odp-location']");
	public By dropdownTypeFile=By.xpath("//span[@class='odp-attach']");
	public By dropdownTypeSchema=By.xpath("//span[@class='odp-library']");
	public By dropdownTypeRelation=By.xpath("//span[@class='odp-references']");
	
	
	
	
	
	
	public int numberOfCurrentDataService() {
		List<WebElement> elements=getWebElements(editButton);
		int numberOfDataService=elements.size();
		System.out.println("Number of Data Service Currently avaialble is :"+numberOfDataService);
		return numberOfDataService;
	}
	public int numberOfPreviousAttributes() {
		List<WebElement> elements=getWebElements(allPreviousAttributes);
		int numberOfPreviouAttributes=elements.size();
		System.out.println("Number of previous Attributes are : "+numberOfPreviouAttributes);
		return numberOfPreviouAttributes;
	}
	
	public void namesOfPreviousAttributes() {
		List<WebElement> elements=getWebElements(allPreviousAttributes);
		int numberOfPreviouAttributes=elements.size();
		for (int i=0; i<numberOfPreviouAttributes; i++) {
			String name=elements.get(i).getText();
			System.out.println(name);
		}
	}
	public void editExistingAttribute() {
		
	}
	
	public void addNewAttribute() {
		//Step 0: Login
		//Step 1: Click on Edit 
		//Step 2: Click on editDraft
		//Step 3: Click on New Attribute
		//Step 4: Click on Attribute Name Field
		//Step 5: Send Text and Name the Attribute
		//Step 6: Select the options Create, Required and Unique
		//Step 7: Select dropdown for type (11 options)
		//Based on the options in 7 the next values will be there 
		// for number option in step 7 we will continue the flow 
		//Send Text in Customer label 
		//Send TExt in Custom Error 
		//Send Text in Defaut Value 
		//Let the Drag and drop be default value 
		//Send TExt in Min and Max value 
		//Send Text in Description
		
		//locator  adding attribute for name = //input[@triggers='manual']
		//at the last index 
		//when we get the previous existing attributes for the same above locator and the count 
		//should get increased by 1 when we press new attribute  or we can use the locator as follows 
		
		
		
		
		
		
		
		
	} 
	
}
