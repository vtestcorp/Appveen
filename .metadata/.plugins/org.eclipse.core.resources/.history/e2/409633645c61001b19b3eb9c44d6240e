package com.PageObjects;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.Utility.BaseClass;
import com.Utility.Config;
import com.Utility.Keyword;

public class ObjectLoginAuthor extends Keyword {
	public ObjectLoginAuthor() {
		PageFactory.initElements(getDriver(), this);
	}

	public By username = By.cssSelector("#username");
	public By nextButton = By.xpath("//button[@type='button']//following::span[text()='Next']");
	public By password = By.cssSelector("#password");
	public By loginButton = By.xpath("//span[text()='Login']");

	///////// After Login/////////////
	String NoOfAttributes = Config.NoOfAttributes;
	public By editButton = By.xpath("//span[text()='Edit']");
	public By viewButton = By.xpath("//span[normalize-space()='View']");
	public By newAttribute = By.xpath("//span[contains(text(),'New Attribute')]");
	public By editAttributeName = By.xpath("(//input[@type='text'])[" + NoOfAttributes + "]");
	public By insert = By.xpath("//button[normalize-space()='Insert']");
	public By previousattributeNames = By.xpath("//input[@type='text'][@formcontrolname='name']");

	//////////// Pop-up for changing attribute ////////
	public By yesPopup = By.xpath("//button[normalize-space()='Yes']");
	public By noPopup = By.xpath("//button[normalize-space()='No']");

	public int getPreviousAttributeNumber() {

		List<WebElement> allNames = getDriver().findElements(previousattributeNames);
		int NoOfPreviousAttributes = allNames.size();
		System.out.println("Number of previous attributes is : " + NoOfPreviousAttributes);
		return NoOfPreviousAttributes;

	}

	public void addMultipleAttributesByNewAttribute(int NoOfAttributes) {
		for (int i = 0; i < NoOfAttributes; i++) {
			clickElement(newAttribute);
		}
	}

	public void addAttributesByInsert(int NoOfAttributes) {
		for (int i = 0; i < NoOfAttributes; i++) {
			clickElement(insert);
		}
	}

	public void configureAdditionalAttributeNumberAndNames(int NoOfAttributes, String s) {
		
		int number = getPreviousAttributeNumber();
		int editIndex=number+NoOfAttributes;
		s=generateRandomString();
		for (int i = number+1; i <= editIndex; i++) {
			// clickElement(By.xpath("(//input[@type='text'])["+i+"]"));
			clearText(By.xpath("(//input[@type='text'])[" + i + "]"));
			enterText(By.xpath("(//input[@type='text'])[" + i + "]"), s);
		}
	}

	public void confirmAttributeChangesPopUp(String YesOrNo) {

		boolean result = isElementPresent(yesPopup);
		try {
			if (result) {
				if (YesOrNo.equalsIgnoreCase("yes")) {
					clickElement(yesPopup);
				} else if (YesOrNo.equalsIgnoreCase("no")) {
					clickElement(noPopup);
				}
			}
		} catch (NoSuchElementException e) {
			System.out.println("Pop up did not appear");
		}
	}
}
